imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @BinidiniCoreBundle/Resources/config/main.yml}

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'BinidiniWebBundle:Form:form_errors.html.twig'
            - 'BinidiniWebBundle:Form:choice_widget_expanded.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                        is_bundle: false

parameters:
    stof_doctrine_extensions.event_listener.logger.class: Binidini\CoreBundle\EventListener\LoggerListener

stof_doctrine_extensions:
    uploadable:
        default_file_path:       %kernel.root_dir%/../web/media/pic
    orm:
        default:
            loggable: true
            uploadable: true

doctrine_mongodb:
    connections:
        default:
            server: "%mongo_server%"
            options: {}
    default_database: "%mongo_dbname%"
    document_managers:
        default:
            auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    port:      %mailer_port%
    username:  %mailer_user%
    encryption: %mailer_encryption%
    auth_mode:  %mailer_auth_mode%
    password:  %mailer_password%
    spool:
        type: file
        path: "%kernel.root_dir%/../spool"

services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

fos_rest:
    disable_csrf_role: ROLE_API
    view:
        formats:
            json: true
        empty_content: 204
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: '^/' }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Binidini\CoreBundle\Entity\User
    registration:
        form:
            type: binidini_user_registration
            validation_groups: [BinidiniRegistration]
    profile:
        form:
            type: binidini_user_profile
            validation_groups: [BinidiniRegistration]

liip_imagine:
    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../web/media/pic

    filter_sets:
        photo590x400:
            quality: 75
            filters:
                thumbnail: { size: [590, 400]}
        photo200x200:
            quality: 75
            filters:
                thumbnail: { size: [200, 200], mode: outbound }
        photo48x48:
            quality: 75
            filters:
                thumbnail: { size: [48, 48], mode: outbound }
        photo38x38:
            quality: 75
            filters:
                thumbnail: { size: [38, 38], mode: outbound }

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     true
    producers:
        binidini_registration:
            connection: default
            exchange_options: {name: 'binidini-registration', type: direct}
        binidini_sms_notification:
            connection: default
            exchange_options: {name: 'binidini-sms-notification', type: direct}
        binidini_email_notification:
             connection: default
             exchange_options: {name: 'binidini-email-notification', type: direct}
    consumers:
        binidini_registration:
            connection:       default
            exchange_options: {name: 'binidini-registration', type: direct}
            queue_options:    {name: 'binidini-registration'}
            callback:         binidini.registration_sms_service
        binidini_sms_notification:
            connection:       default
            exchange_options: {name: 'binidini-sms-notification', type: direct}
            queue_options:    {name: 'binidini-sms-notification'}
            callback:         binidini.notification_sms_service
        binidini_email_notification:
            connection:       default
            exchange_options: {name: 'binidini-email-notification', type: direct}
            queue_options:    {name: 'binidini-email-notification'}
            callback:         binidini.notification_email_service
