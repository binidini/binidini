services:
    binidini_user.registration.form.type:
        class: Binidini\CoreBundle\Form\Type\RegistrationFormType
        arguments:
            - @service_container
            - %fos_user.model.user.class%
        tags:
            - { name: form.type, alias: binidini_user_registration }

    binidini_user.profile.form.type:
        class: Binidini\CoreBundle\Form\Type\ProfileFormType
        arguments:
            - @service_container
            - %fos_user.model.user.class%
        tags:
            - { name: form.type, alias: binidini_user_profile }


    binidini.subscriber.user_registration:
        class: Binidini\CoreBundle\EventListener\RegistrationListener
        arguments: [@old_sound_rabbit_mq.binidini_sms_producer, @router]
        tags:
            - { name: kernel.event_subscriber }

    binidini.listener.user_aware:
        class: Binidini\CoreBundle\EventListener\UserAwareListener
        arguments: [@security.context]
        tags:
            - { name: kernel.event_listener, event: binidini_core.shipping.pre_create, method: setUser  }
            - { name: kernel.event_listener, event: binidini_core.bid.pre_create, method: setUser  }
            - { name: kernel.event_listener, event: binidini_core.message.pre_create, method: setUser  }
            - { name: kernel.event_listener, event: binidini_core.review.pre_create, method: setUser  }
            - { name: kernel.event_listener, event: binidini_core.gcm_token.pre_create, method: setUser  }

    binidini.listener.shipping:
        class: Binidini\CoreBundle\EventListener\ShippingListener
        arguments:
            - @doctrine.odm.mongodb.document_manager
            - @doctrine.orm.entity_manager
            - @old_sound_rabbit_mq.binidini_geocode_producer
            - @logger
            - %kernel.root_dir%
            - @binidini.notification.service
        tags:
            - { name: kernel.event_listener, event: binidini_core.shipping.post_create, method: onShippingPostCreate }
            - { name: kernel.event_listener, event: binidini_core.shipping.pre_create, method: onShippingPreCreate }
            - { name: monolog.logger, channel: main }

    binidini.listener.bid:
        class: Binidini\CoreBundle\EventListener\BidListener
        arguments: [@binidini.notification.service]
        tags:
            - { name: kernel.event_listener, event: binidini_core.bid.post_create, method: onBidPostCreate }

    binidini.listener.message:
        class: Binidini\CoreBundle\EventListener\MessageListener
        arguments:
            - @doctrine.orm.entity_manager
            - @binidini.notification.service
        tags:
            - { name: kernel.event_listener, event: binidini_core.message.post_create, method: onMessagePostCreate }

    binidini.geocode.yandex.client:
        class: %guzzle.client.class%
        arguments: ['http://geocode-maps.yandex.ru/1.x/']
        tags:
            - { name: guzzle.client }

    binidini.smsc.client:
        class: %guzzle.client.class%
        arguments: ['https://smsc.ru/']
        tags:
            - { name: guzzle.client }

    binidini.alfabank.client:
        class: %guzzle.client.class%
        arguments: [%alfabank_url%]
        tags:
            - { name: guzzle.client }

    binidini.alfabank_service:
        class: Binidini\CoreBundle\Service\AlfabankService
        arguments:
            - @router
            - @logger
            - @binidini.alfabank.client
            - %alfabank_login%
            - %alfabank_password%
        tags:
              - { name: monolog.logger, channel: alfabank }

    binidini.sms_service:
        class: Binidini\CoreBundle\Service\SmsService
        arguments:
            - @logger
            - @binidini.smsc.client
            - %smsc_login%
            - %smsc_password%
            - %smsc_sender%
        tags:
              - { name: monolog.logger, channel: sms }

    binidini.gcm_service:
        class: Binidini\CoreBundle\Service\GcmService
        arguments:
            - @logger
            - %gcm_api_key%
        tags:
              - { name: monolog.logger, channel: gcm }

    binidini.geocode_worker:
        class: Binidini\CoreBundle\Worker\GeocodeWorker
        arguments:
            - @binidini.geocode.yandex.client
            - @doctrine.orm.entity_manager
            - @doctrine.odm.mongodb.document_manager
            - @binidini.notification.service

    binidini.sms_worker:
        class: Binidini\CoreBundle\Worker\SmsWorker
        arguments: [@binidini.sms_service]

    binidini.gcm_worker:
        class: Binidini\CoreBundle\Worker\GcmWorker
        arguments: [@binidini.gcm_service]

    binidini.email_worker:
        class: Binidini\CoreBundle\Worker\EmailWorker
        arguments:
            - @mailer
            - @logger
        tags:
              - { name: monolog.logger, channel: email }

    binidini.form.type.shipping:
        class: Binidini\CoreBundle\Form\Type\ShippingType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: binidini_core_shipping}

    binidini.form.type.message:
        class: Binidini\CoreBundle\Form\Type\MessageType
        tags:
            - { name: form.type, alias: binidini_core_message}

    binidini.form.type.bid:
        class: Binidini\CoreBundle\Form\Type\BidType
        tags:
            - { name: form.type, alias: binidini_core_bid}

    binidini.form.type.review:
            class: Binidini\CoreBundle\Form\Type\ReviewType
            tags:
                - { name: form.type, alias: binidini_core_review}

    binidini.form.type.gcm_token:
            class: Binidini\CoreBundle\Form\Type\GcmTokenType
            tags:
                - { name: form.type, alias: binidini_core_gcm_token}

    binidini.form.type.user:
            class: Binidini\CoreBundle\Form\Type\UserType
            tags:
                - { name: form.type, alias: binidini_core_user}


    binidini.security.service:
        class: Binidini\CoreBundle\Service\SecurityService
        arguments:
            - @security.context
            - %delivery_code_prime%

    binidini.notification.service:
        class: Binidini\CoreBundle\Service\NotificationService
        arguments:
            - @old_sound_rabbit_mq.binidini_sms_producer
            - @old_sound_rabbit_mq.binidini_email_producer
            - @old_sound_rabbit_mq.binidini_gcm_producer
            - @twig
            - @doctrine.orm.entity_manager


    binidini.shipping.logic.service:
        class: Binidini\CoreBundle\Service\ShippingLogicService
        arguments:
            - @binidini.security.service
            - @doctrine.odm.mongodb.document_manager

    binidini.bid.logic.service:
        class: Binidini\CoreBundle\Service\BidLogicService
        arguments:
            - @binidini.security.service
            - @binidini.shipping.logic.service
            - @doctrine.orm.entity_manager
            - @sm.factory

    binidini.authentication.service:
        class: Binidini\CoreBundle\Service\AuthenticationService
        arguments:
            - @fos_user.user_manager
            - @security.encoder_factory
            - @memcache.default

    binidini.exceptions.listner:
        class: Binidini\CoreBundle\EventListener\ExceptionListener
        arguments: [@router, @session]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    binidini.listener.edit_user_profile:
        class: Binidini\CoreBundle\EventListener\EditUserProfileListener
        arguments: [@stof_doctrine_extensions.uploadable.manager, @doctrine.orm.entity_manager, @security.context, @router, %kernel.root_dir%]
        tags:
            - { name: kernel.event_listener, event: fos_user.profile.edit.completed }
            - { name: kernel.event_listener, event: fos_user.profile.edit.success }
            - { name: kernel.event_listener, event: fos_user.profile.edit.initialize }

    binidini.listener.review:
        class: Binidini\CoreBundle\EventListener\ReviewListener
        arguments: [@doctrine.orm.entity_manager]
        tags:
            - { name: kernel.event_listener, event: binidini_core.review.post_create, method: onReviewPostCreate }

    binidini.handler.authentication.failure:
        class: Binidini\CoreBundle\Handler\AuthenticationFailureHandler
        arguments:
            - @binidini.authentication.service
            - @fos_user.security.login_manager
            - @router
            - @http_kernel
            - @security.http_utils
            - @logger

    binidini.oauth.server.storage:
        class: Binidini\CoreBundle\Storage\OAuthStorage
        arguments:
            - @binidini.authentication.service
            - @fos_oauth_server.client_manager
            - @fos_oauth_server.access_token_manager
            - @fos_oauth_server.refresh_token_manager
            - @fos_oauth_server.auth_code_manager
            - @fos_oauth_server.user_provider
            - @security.encoder_factory

