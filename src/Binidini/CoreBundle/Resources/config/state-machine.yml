winzou_state_machine:
    binidini_core_shipping:
        class: Binidini\CoreBundle\Entity\Shipping
        property_path: state
        graph: logic
        state_machine_class: Sylius\Component\Resource\StateMachine\StateMachine
        states:
            - init
            - new
            - accepted
            - dispatched
            - on_way
            - delivered     #awaiting_payment
            - paid          #awaiting_payment_confirmation
            - completed
            - rejected      # rejected by carrier, awaiting_cancel confirmation from sender
            - refused       # refused by sender, awaiting cancel confirmation from carrier
            - canceled
            - conflict
        transitions:
            create: #by sender
                from: [init]
                to: new
            accept: #by sender
                from: [new]
                to: accepted
            dispatch: #by sender
                from: [accepted]
                to: dispatched
            load:  #by carrier
                from: [dispatched]
                to: on_way
            deliver:  #by carrier
                from: [on_way]
                to: delivered
            pay:  #by sender
                from: [delivered]
                to: paid
            complete: #by carrier
                from: [paid]
                to: completed
            reject:  #by carrier
                from: [accepted, dispatched, on_way, delivered, paid]
                to: rejected
            refuse:  #by sender
                from: [accepted, dispatched, on_way, delivered, paid]
                to: refused
            cancel:  #by sender
                from: [new]
                to: canceled
            nullify:  #by sender
                from: [rejected]
                to: canceled
            annul:   #by carrier
                from: [refused]
                to: canceled
            dispute: #by sender
                from: [accepted, dispatched, on_way, delivered, paid]
                to: conflict
            debate:  #by carrier
                from: [refused]
                to: conflict
            resolve:  #by manager
                from: [conflict]
                to: canceled
        callbacks:
            before:
                check_accept:   { on: 'accept',   do: [@binidini.security.service, 'checkCarrier'],    args: ['object'] }
                check_dispatch: { on: 'dispatch', do: [@binidini.security.service, 'checkSender'],    args: ['object'] }
                check_load:     { on: 'load',     do: [@binidini.security.service, 'checkCarrier'],   args: ['object'] }
                check_deliver:  { on: 'deliver',  do: [@binidini.security.service, 'checkCarrier'],   args: ['object'] }
                check_pay:      { on: 'pay',      do: [@binidini.security.service, 'checkSender'],    args: ['object'] }
                check_complete: { on: 'complete', do: [@binidini.shipping.logic.service, 'beforeComplete'], args: ['object'] }
                check_reject:   { on: 'reject',   do: [@binidini.security.service, 'checkResolver'],  args: ['object'] }
                check_refuse:   { on: 'refuse',   do: [@binidini.security.service, 'checkSender'],   args: ['object'] }
                check_cancel:   { on: 'cancel',   do: [@binidini.security.service, 'checkSender'],    args: ['object'] }
                check_nullify:  { on: 'nullify',  do: [@binidini.security.service, 'checkResolver'],  args: ['object'] }
                check_annul:    { on: 'annul',    do: [@binidini.security.service, 'checkResolver'],  args: ['object'] }
                check_dispute:  { on: 'dispute',  do: [@binidini.security.service, 'checkSender'],    args: ['object'] }
                check_debate:   { on: 'debate',   do: [@binidini.security.service, 'checkCarrier'],   args: ['object'] }
                check_resolve:  { on: 'resolve',  do: [@binidini.security.service, 'checkResolver'],  args: ['object'] }
            after:
                after_cancel:   { on: 'cancel',   do: [@binidini.shipping.logic.service, 'removeShipment'], args: ['object'] }


    binidini_core_bid:
        class: Binidini\CoreBundle\Entity\Bid
        property_path: state
        graph: simple
        state_machine_class: Sylius\Component\Resource\StateMachine\StateMachine
        states:
            - new
            - accepted  #by sender
            - agreed    #by carrier
            - rejected  #by sender
            - canceled  #by carrier
        transitions:
            accept: #by sender
                from: [new]
                to: accepted
            reject: #by sender
                from: [new]
                to: rejected
            cancel: #by carrier
                from: [new]
                to: canceled
            recall:
                from: [accepted]
                to: canceled
            agree:
                from: [accepted]
                to: agreed
        callbacks:
            before:
                accept: { on: 'accept', do: [@binidini.security.service, 'checkSender'],     args: ['object'] }
                reject: { on: 'reject', do: [@binidini.security.service, 'checkSender'],     args: ['object'] }
                cancel: { on: 'cancel', do: [@binidini.security.service, 'checkCarrier'],    args: ['object'] }
                recall: { on: 'recall', do: [@binidini.security.service, 'checkCarrier'],    args: ['object'] }
                agree:  { on: 'agree',  do: [@binidini.bid.logic.service, 'agreeTransition'], args: ['object'] }
